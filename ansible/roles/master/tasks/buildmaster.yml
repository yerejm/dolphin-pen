---
##
## USER
##
- name: buildbot | Add buildbot user
  user:
    name: "{{ buildbot_username }}"
    home: "/home/{{ buildbot_username }}"
    shell: /bin/bash
    state: present

- name: buildbot | Add public key to login as buildbot
  authorized_key:
    user: "{{ buildbot_username }}"
    key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

# buildmaster will change into fifoci to upload the test results fetched from
# the fifoci slave into the fifoci (master) front end.
- name: buildbot | Give buildmaster sudo
  copy:
    content: "{{ buildbot_username }} ALL=(ALL) NOPASSWD: ALL"
    dest: "/etc/sudoers.d/{{ buildbot_username }}"
    mode: 0440
    validate: "visudo -cf %s"

##
## APT DEPENDENCIES
##
- name: buildbot | Install buildbot-master
  apt:
    pkg: "{{ item }}"
    state: present
  with_items:
    - buildbot
    - python
    - python-pip
    - python-dev

##
## PIP DEPENDENCIES
##
- name: buildbot | Install python packages (pip)
  pip:
    name: "{{ item }}"
    state: present
  with_items:
    - psycopg2

##
## DEPLOY
##
- name: buildbot | Create bin directory
  sudo: yes
  sudo_user: "{{ buildbot_username }}"
  file:
    path: ~/bin
    state: directory

- name: buildbot | Create pull request job directory
  file:
    path: "/home/{{ buildbot_username }}/{{ buildmaster_pr_jobdir }}"
    owner: "{{ buildbot_username }}"
    state: directory

##
## SSL & SEND_BUILD
##
# Certificate from www is required for send_build
- name: buildbot | Install www ssl certificate
  copy:
    src: tmp/ssl/www.crt
    dest: /usr/local/share/ca-certificates/www.crt
    mode: 0444
  tags:
    - ssl

- name: buildbot | Update ca-certificates
  command: update-ca-certificates
  args:
    creates: /etc/ssl/certs/www.pem
  tags:
    - ssl

- name: buildbot | Install send_build.py
  command: "cp ~/sadm/buildbot/send_build.py /home/{{ buildbot_username }}/bin/send_build.py"
  args:
    creates: "/home/{{ buildbot_username }}/bin/send_build.py"

- name: buildbot | Set www/downloads key
  replace:
    dest: "/home/{{ buildbot_username }}/bin/send_build.py"
    regexp: 'password'
    replace: "{{ www_downloads_create_key }}"
    backup: yes

- name: buildbot | Replace dolphin-emu.org
  replace:
    dest: "/home/{{ buildbot_username }}/bin/send_build.py"
    regexp: 'dolphin-emu\.org'
    replace: "www.dev"
    backup: yes

- name: buildbot | Set send_build.py attributes
  file:
    path: "/home/{{ buildbot_username }}/bin/send_build.py"
    owner: "{{ buildbot_username }}"
    group: "{{ buildbot_username }}"
    mode: 0755
    state: file

##
## POSTGRESQL
##
- name: buildbot | create buildbot database user
  sudo: yes
  sudo_user: postgres
  postgresql_user:
    name: "{{ buildbot_username }}"
    password: "{{ buildbot_username }}"

- name: buildbot | Create buildbot database
  sudo: yes
  sudo_user: postgres
  postgresql_db:
    owner: "{{ buildbot_username }}"
    name: "{{ buildbot_username }}"
    state: present

- name: buildbot | Grant database access
  sudo: yes
  sudo_user: postgres
  postgresql_privs:
    db: "{{ buildbot_username }}"
    privs: ALL
    type: database
    role: "{{ buildbot_username }}"

##
## BUILDBOT
##
- name: buildbot | Create build master
  sudo: yes
  sudo_user: "{{ buildbot_username }}"
  command: "buildbot create-master --db postgresql://buildbot@localhost/buildbot"
  args:
    creates: buildbot.tac

# Bug in buildbot 0.8.x (fixed in 0.9.x) with postgresql
# It can cause changes that should be added to the build queue to go missing.
# http://trac.buildbot.net/ticket/2423
- name: buildbot | Workaround buildbot race condition
  sudo: yes
  sudo_user: "{{ buildbot_username }}"
  shell: psql -c "alter table buildsets drop constraint buildsets_sourcestampid_fkey" && touch ~/.buildbot-race
  args:
    creates: ~/.buildbot-race

- name: buildbot | Install master.cfg
  command: "cp ~/sadm/buildbot/master.cfg /home/{{ buildbot_username }}/master.cfg"
  args:
    creates: "/home/{{ buildbot_username }}/master.cfg"

- name: buildbot | Replace master.cfg dolphin-emu.org domain
  replace:
    dest: "/home/{{ buildbot_username }}/master.cfg"
    regexp: '\.dolphin-emu\.org'
    replace: '.dev'
    backup: yes

- name: buildbot | Customise master.cfg dolphin repository
  replace:
    dest: "/home/{{ buildbot_username }}/master.cfg"
    regexp: '"https://github.com/dolphin-emu/dolphin.git"'
    replace: "\"{{ dolphin_repository }}\""
    backup: yes

- name: buildbot | Customise master.cfg irc host
  replace:
    dest: "/home/{{ buildbot_username }}/master.cfg"
    regexp: '"irc\.freenode\.net"'
    replace: "\"{{ irc_host }}\""
    backup: yes

- name: buildbot | Set master.cfg attributes
  file:
    path: "/home/{{ buildbot_username }}/master.cfg"
    owner: "{{ buildbot_username }}"
    group: "{{ buildbot_username }}"
    mode: 0644
    state: file

# Do not parameterise the password file creation. The passwords will print to
# stdout in the ansible output.
- name: buildbot | Build buildslave password file
  sudo: yes
  sudo_user: "{{ buildbot_username }}"
  copy:
    content: "{{ buildslaves_passwords | to_nice_json }}"
    dest: ~/buildslaves-passwords.json
  notify: restart buildbot

- name: buildbot | Build users password file
  sudo: yes
  sudo_user: "{{ buildbot_username }}"
  copy:
    content: "{{ buildmaster_users_passwords | to_nice_json }}"
    dest: ~/users-passwords.json
  notify: restart buildbot

- name: buildbot | Build changesource password file
  sudo: yes
  sudo_user: "{{ buildbot_username }}"
  copy:
    content: "{{ changesource_password }}"
    dest: ~/changesource-password.txt
  notify: restart buildbot

- name: buildbot | Build webauth password file
  sudo: yes
  sudo_user: "{{ buildbot_username }}"
  copy:
    content: "{{ webauth_password }}"
    dest: ~/webauth-password.txt
  notify: restart buildbot

- name: buildbot | Enable buildmaster init.d
  template:
    src: etc_default_buildmaster.j2
    dest: /etc/default/buildmaster
    backup: yes
    mode: 0444
  notify: restart buildbot

##
## WEB
##
- name: buildbot | Enable nginx proxy
  template:
    src: buildbot.nginx.j2
    dest: /etc/nginx/services/buildbot.nginx
    mode: 0444
  notify: restart nginx

