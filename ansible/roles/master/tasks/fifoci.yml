# Do not use virtualenv. django_manage and the build master invocation of
# django's manage require python/pip at the system level.
---
##
## USER
##
- name: fifoci | Add fifoci user
  user:
    name: fifoci
    home: /home/fifoci
    shell: /bin/bash
    state: present

- name: fifoci | Add public key to login as fifoci
  authorized_key:
    user: fifoci
    key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

- name: fifoci | Add github to known_hosts
  sudo: yes
  sudo_user: fifoci
  lineinfile:
    dest: ~/.ssh/known_hosts
    create: yes
    state: present
    line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
    regexp: "^github\\.com"

##
## CLONE
##
- name: fifoci | Clone fifoci
  sudo: yes
  sudo_user: fifoci
  git:
    repo: "{{ fifoci_repository }}"
    dest: fifoci
    accept_hostkey: "{{ 'yes' if testing is defined else 'no' }}"

##
## APT DEPENDENCIES
##
- name: fifoci | Install fifoci frontend dependencies
  apt:
    pkg: "{{ item }}"
    state: present
  with_items:
    - python3
    - python3-pip
    - python3-dev
    - libjpeg-dev
    - zlib1g-dev
    - sqlite3
    - supervisor

##
## PIP DEPENDENCIES
##
- name: fifoci | Install fifoci dependencies (pip requirements)
  pip:
    executable: pip3
    requirements: /home/fifoci/fifoci/requirements.txt
    state: present

- name: fifoci | Install python packages (pip)
  pip:
    executable: pip3
    name: "{{ item }}"
    state: present
  with_items:
    - gunicorn
    - requests

##
## SYSTEM DEPENDENCIES
##
- name: fifoci | Copy custom frontend
  sudo: yes
  sudo_user: fifoci
  copy:
    src: "fifoci/frontend/fifoci/settings/{{ item }}"
    dest: ~/fifoci/frontend/fifoci/settings/
  with_items:
    - base.py # change site name
    - production.py # use sqlite3 db

- name: fifoci | Create fifoci web area
  file:
    src: /home/fifoci/fifoci/frontend
    dest: /srv/fifoci
    state: link

# The build master will sudo into fifoci to run manage.py to import the test
# results retrieved from the slave. It assumes that python exists in the home
# directory. This python must be at least 3.3.
- name: fifoci | Link python into fifoci home
  sudo: yes
  sudo_user: fifoci
  file:
    src: "/usr/bin/{{ item }}3"
    dest: "~/{{ item }}"
    state: link
  with_items:
    - python

##
## DFF
##
- name: fifoci | Create media (dff) area
  sudo: yes
  sudo_user: fifoci
  file:
    path: ~/fifoci/frontend/media/dff
    state: directory

- name: fifoci | Link dff to fifoci home (runner)
  sudo: yes
  sudo_user: fifoci
  file:
    src: ~/fifoci/frontend/media/dff
    dest: ~/dff
    state: link

- name: fifoci | Copy dff files (needed for /dff/)
  sudo: yes
  sudo_user: fifoci
  copy:
    src: dff/
    dest: ~/fifoci/frontend/media/dff

- name: fifoci | Create media results area (needed for /existing-images/)
  sudo: yes
  sudo_user: fifoci
  file:
    path: ~/fifoci/frontend/media/results
    state: directory

##
## DJANGO
##
# Hack to get around need to be able to insert or update into fifoci database
# This is not very idempotent
- name: fifoci | Delete fifodb database
  file:
    path: ~/fifoci/frontend/db.sqlite3
    state: absent

# django_manage does not allow overriding the python command used to run it,
# which is required for python 3.
# - name: fifoci | Prepare fifoci database and static content
#   sudo: yes
#   sudo_user: fifoci
#   django_manage:
#     command: "{{ item }}"
#     app_path: ~/fifoci/frontend
#   with_items:
#     - migrate
#     - collectstatic --noinput

# As a result, call the command directly.
- name: fifoci | Prepare fifoci database and static content
  sudo: yes
  sudo_user: fifoci
  command: "~/python manage.py {{ item.command }}"
  args:
    chdir: ~/fifoci/frontend
    creates: "~/fifoci/frontend/{{ item.artifact }}"
  with_items:
    - { command: "migrate", artifact: "db.sqlite3" }
    - { command: "collectstatic --noinput", artifact: "static/index.html" }

# The dff.sql file is generated by initdff.py. It is a prerequisite of running
# fifoci that this be done or else this task will fail. This is expected
# behaviour.
- name: fifoci | Seed dff
  sudo: yes
  sudo_user: fifoci
  shell: "echo .read media/dff/dff.sql | sqlite3 db.sqlite3"
  args:
    chdir: ~/fifoci/frontend

##
## WEB
##
- name: fifoci | Install gunicorn configuration file
  sudo: yes
  sudo_user: fifoci
  template:
    src: gunicorn.conf.py.j2
    dest: ~/fifoci/frontend/gunicorn.conf.py
    mode: 0444

- name: fifoci | Install the supervisor configuration file
  template:
    src: supervisor.fifoci.conf.j2
    dest: /etc/supervisor/conf.d/fifoci.conf
    mode: 0444
  notify: restart fifoci supervisor

- name: fifoci | Enable nginx proxy
  template:
    src: fifoci.nginx.j2
    dest: /etc/nginx/services/fifoci.nginx
    mode: 0444
  notify: restart nginx

