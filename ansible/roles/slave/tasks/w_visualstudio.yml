---
- name: visual studio | Installed?
  win_stat:
    path: "C:\\Program Files (x86)\\msbuild\\{{ vs_version }}\\bin"
  register: app

- name: visual studio | Need to mount?
  win_stat:
    path: "d:\\vs_community.exe"
  register: mount
  when: not app.stat.exists

- name: visual studio | Mount ISO
  raw: "powershell mount-diskimage {{ download_location }}\\{{ file }}"
  when: not app.stat.exists and not mount.stat.exists

- name: visual studio | Install
  win_package:
    name: Visual Studio
    path: "d:\\vs_community.exe"
    product_id: "{fcaa9dba-9438-48b6-ad91-4e9b4cc7084a}"
    arguments: "/silent /norestart /norefresh /InstallSelectableItems NativeLanguageSupport_VC /l c:\\tmp\\vs\\log.txt"
  when: not app.stat.exists
  ignore_errors: true

- name: visual studio | Need to dismount?
  win_stat:
    path: "d:\\vs_community.exe"
  register: mount

- name: visual studio | Dismount ISO
  raw: "powershell dismount-diskimage {{ download_location }}\\{{ file }}"
  when: mount.stat.exists

- name: restart machine
  raw: 'shutdown /r /t 2 /f /d p:4:1 /c "Ansible Shutdown for Visual Studio"'
  async: 0
  poll: 0
  ignore_errors: true

- name: waiting for server to come back
  local_action: wait_for host={{ inventory_hostname }} port={{ ansible_ssh_port }} state=started delay=120
  become: false

- name: wait for vagrant mount
  win_stat:
      path: "c:\\tmp\\vagrant-cache"
  register: mount
  until: mount.stat.exists
  retries: 10
  delay: 6
