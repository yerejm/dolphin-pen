---
##
## USER
##
- name: Add buildbot user
  user:
    name: "{{ buildbot_username }}"
    home: "/home/{{ buildbot_username }}"
    shell: /bin/bash
    state: present

- name: Add public key to login as buildbot
  authorized_key:
    user: "{{ buildbot_username }}"
    key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

- name: Add github to known_hosts
  sudo: yes
  sudo_user: "{{ buildbot_username }}"
  lineinfile:
    create: yes
    dest: ~/.ssh/known_hosts
    line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
    regexp: "^github\\.com"
    state: present

##
## COMMON PKG
##
- name: Install common build dependencies
  apt:
    pkg: "{{ item }}"
    state: present
  with_items:
    - cmake
    - g++
    - libgtk2.0-dev
    - libbluetooth-dev
    - libxrandr-dev
    - libxext-dev
    - libreadline-dev
    - libpulse-dev
    - libao-dev
    - libopenal-dev
    - libavcodec-dev
    - libavformat-dev
    - libswscale-dev

##
## UBUNTU PKG
##
- name: Install ubuntu specific build dependencies
  apt:
    pkg: "{{ item }}"
    state: present
  with_items:
    - libwxbase3.0-dev
    - libwxgtk3.0-dev
    - libasound-dev
    - libsdl2-dev # broken sdl, but needed for dpkg shlib validation
  when: ansible_distribution == 'Ubuntu'

##
## DEBIAN PKG
##
- name: Install debian specific build dependencies
  apt:
    pkg: "{{ item }}"
    state: present
  with_items:
    - libwxbase2.8-dev
    - libwxgtk2.8-dev
    - libasound2-dev
    - libgl1-mesa-dev
    - libglu1-mesa-dev
    - libxt-dev
    - libxt6
    - mesa-common-dev
    - mercurial # this is to install the latest SDL
  when: ansible_distribution == 'Debian'

# Building a linux (.deb) package will not work when building SDL from source
# without additional tasks, such as building a package from the built SDL and
# installing that. For now, leave it alone and let it build a buggy package for
# rumble-enabled controllers. This applies to the ubuntu buildslave only. The
# debian buildslave needs to build from source because the apt repository does
# not include SDL 2.0.
# SDL 2.0 must be compiled from source to prevent a bug causing Dolphin to crash
# with rumble-enabled conrollers.
- name: Retrieve SDL
  hg:
    repo: "{{ sdl_repository }}"
    dest: ~/SDL
  when: ansible_distribution == 'Debian'

- name: Install SDL
  shell: "./configure && make -j4 && make install"
  args:
    chdir: ~/SDL
    creates: /usr/local/include/SDL2/SDL.h
  when: ansible_distribution == 'Debian'

##
## FIFOCI
##
- include: fifoci.yml tags=slave,buildbot,fifoci
  when: ansible_hostname in groups['fifoci']

##
## DPKG
##
- include: dpkg.yml tags=slave,dpkg
  when: ansible_hostname in groups['dpkg']

##
## BUILDBOT
##
- name: Install buildbot-slave
  apt:
    pkg: "{{ item }}"
    state: present
  with_items:
    - buildbot-slave

- name: Create build slave
  sudo: yes
  sudo_user: "{{ buildbot_username }}"
  shell: "buildslave create-slave . {{ buildmaster_host }}:{{ buildmaster_port }} {{ slave_username }} {{ slave_password }}"
  args:
    creates: info/admin

- name: Update slave host information
  sudo: yes
  sudo_user: "{{ buildbot_username }}"
  template:
    src: buildbot_info_host.j2
    dest: info/host

- name: Update slave admin information
  sudo: yes
  sudo_user: "{{ buildbot_username }}"
  template:
    src: buildbot_info_admin.j2
    dest: info/admin

- name: Enable buildslave init.d
  template:
    src: etc_default_buildslave.j2
    dest: /etc/default/buildslave
    backup: yes
    mode: 0644

- name: Start buildslave
  service:
    name: buildslave
    enabled: yes
    pattern: /usr/bin/buildslave
    state: started

