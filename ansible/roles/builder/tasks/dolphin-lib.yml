---
- name: Install common build dependencies
  apt: pkg={{ item }} state=present
  with_items:
    - cmake
    - g++
    - libgtk2.0-dev
    - libbluetooth-dev
    - libxrandr-dev
    - libxext-dev
    - libreadline-dev
    - libpulse-dev
    - libao-dev
    - libopenal-dev
    - libavcodec-dev
    - libavformat-dev
    - libswscale-dev
    - libsdl2-dev # broken sdl, but needed for dpkg
    # - mercurial # this is to install the latest SDL
  when: ansible_os_family == 'Debian'

- name: Install debian specific build dependencies
  apt: pkg={{ item }} state=present
  with_items:
    - libwxbase2.8-dev
    - libwxgtk2.8-dev
    - libasound2-dev
    - libgl1-mesa-dev
    - libglu1-mesa-dev
    - libxt-dev
    - libxt6
    - mesa-common-dev
  when: ansible_distribution == 'Debian'

- name: Install ubuntu specific build dependencies
  apt: pkg={{ item }} state=present
  with_items:
    - libwxbase3.0-dev
    - libwxgtk3.0-dev
    - libasound-dev
  when: ansible_distribution == 'Ubuntu'

# Building a linux (.deb) package will not work when building SDL from source
# without additional tasks, such as building a package from the built SDL and
# installing that. For now, leave it alone and let it build a buggy package for
# rumble-enabled controllers.
# # SDL 2.0 must be compiled from source to prevent a bug causing Dolphin to crash
# # with rumble-enabled conrollers.
# - name: Retrieve SDL
#   hg: repo={{ sdl_repository }} dest=~/SDL
#   when: ansible_os_family == 'Debian'
#
# - name: Install SDL
#   shell: "./configure && make -j4 && make install"
#   args:
#     chdir: ~/SDL
#     creates: /usr/local/include/SDL2/SDL.h
#   when: ansible_os_family == 'Debian'

- name: Install cmake
  homebrew: state=present name={{ item }}
  with_items:
    - cmake
  when: ansible_system == 'Darwin'

# REALLY install cmake
# On darwin, the path setting of non-interactive logins does not include
# /usr/local/bin, so cmake is not available.
# This means that doing a real login as a user to echo the $PATH and doing the
# same through ssh results in competely different PATH values being set.
# Nobody seems to know of a it-just-works solution to make osx handle it
# properly, so brute force it by linking the executable to where it can be found.
- name: Link cmake
  file: src=/usr/local/bin/cmake dest=/usr/bin/cmake state=link
  sudo: yes
  when: ansible_system == 'Darwin'

