---
##
## USER
##
- name: Add buildbot user
  user:
    name: "{{ buildbot_username }}"
    home: "/home/{{ buildbot_username }}"
    shell: /bin/bash
    state: present

- name: Add public key to login as buildbot
  authorized_key:
    user: "{{ buildbot_username }}"
    key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

- name: Add github to known_hosts
  become: yes
  become_user: "{{ buildbot_username }}"
  lineinfile:
    create: yes
    dest: ~/.ssh/known_hosts
    line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
    regexp: "^github\\.com"
    state: present

##
## COMMON PKG
##
- name: Install common build dependencies
  apt:
    pkg: "{{ item }}"
    state: present
  with_items:
    - cmake
    - g++
    - libgtk2.0-dev
    - libbluetooth-dev
    - libxrandr-dev
    - libxext-dev
    - libreadline-dev
    - libpulse-dev
    - libao-dev
    - libopenal-dev
    - libavcodec-dev
    - libavformat-dev
    - libswscale-dev
    - libudev-dev
    - libevdev-dev
    - ninja-build

##
## UBUNTU PKG
##
- name: Install ubuntu specific build dependencies
  apt:
    pkg: "{{ item }}"
    state: present
  with_items:
    - libwxbase3.0-dev
    - libwxgtk3.0-dev
    - libasound-dev
  when: ansible_distribution == 'Ubuntu'

##
## DEBIAN PKG
##
- name: Install debian specific build dependencies
  apt:
    pkg: "{{ item }}"
    state: present
  with_items:
    - libwxbase3.0-dev
    - libwxgtk3.0-dev
    - libasound2-dev
    - libgl1-mesa-dev
    - libglu1-mesa-dev
    - libxt-dev
    - libxt6
    - mesa-common-dev
  when: ansible_distribution == 'Debian'

##
## FIFOCI
##
- include: fifoci.yml
  tags: [slave,buildbot,fifoci]
  when: ansible_hostname in groups['fifoci']

##
## DPKG
##
- include: dpkg.yml
  tags: [slave,dpkg]
  when: ansible_hostname in groups['dpkg']

##
## BUILDBOT
##
- name: Install buildbot-slave
  apt:
    pkg: "{{ item }}"
    state: present
  with_items:
    - buildbot-slave

- name: Create build slave
  become: yes
  become_user: "{{ buildbot_username }}"
  shell: "buildslave create-slave . {{ buildmaster_host }}:{{ buildmaster_port }} {{ slave_username }} {{ slave_password }}"
  args:
    creates: info/admin

- name: Update slave host information
  become: yes
  become_user: "{{ buildbot_username }}"
  template:
    src: buildbot_info_host.j2
    dest: info/host

- name: Update slave admin information
  become: yes
  become_user: "{{ buildbot_username }}"
  template:
    src: buildbot_info_admin.j2
    dest: info/admin

- name: Enable buildslave init.d
  template:
    src: etc_default_buildslave.j2
    dest: /etc/default/buildslave
    backup: yes
    mode: 0644
  notify: restart debian buildbot

