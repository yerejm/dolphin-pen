# buildslave start failures are ignored because the most common failure is that
# the master has not yet started.
# For OSX, the buildbot start currently is dumb.
# For Debian/Ubuntu, when the pattern is present, success or failure should be
# determined with respect to whether a process matching that pattern exists and
# not the exit code. Unfortunately, the exit code from the process is used by
# service module instead. Of note is that ignoring the error was not required in
# before the introduction of systemd.
# For FreeBSD, the same applies. Exit code used instead of the pattern.
# For Windows, there is no support for handlers.
---
# no support for handlers in windows yet
# - name: restart windows buildbot
#   win_service:
#     name: BuildBot
#     start_mode: auto
#     state: restarted

- name: restart debian buildbot
  service:
    name: buildslave
    enabled: yes
    pattern: /usr/bin/buildslave
    state: restarted
  when: ansible_os_family == 'Debian'
  ignore_errors: yes

# The service module does not support OSX, but it if it did...
# # On OSX, the service is run with the twistd command, and not the buildslave
# # command.
# # http://trac.buildbot.net/wiki/UsingLaunchd
# - name: restart darwin buildbot
#   service:
#     name: net.buildbot.slave
#     enabled: yes
#     pattern: buildbot.tac
#     state: restarted
# Fake it.
# (must sudo because osx is run as vagrant user)
- name: restart darwin buildbot
  sudo: yes
  shell: launchctl unload -w /Library/LaunchAgents/net.buildbot.slave.plist && launchctl load -w /Library/LaunchAgents/net.buildbot.slave.plist
  when: ansible_os_family == 'Darwin'

- name: restart freebsd buildbot
  service:
    name: buildslave
    enabled: yes
    pattern: /usr/local/bin/buildslave
    state: restarted
  when: ansible_os_family == 'FreeBSD'
  ignore_errors: yes

