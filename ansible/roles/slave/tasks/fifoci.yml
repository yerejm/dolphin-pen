---
##
## USER
##
- name: fifoci | Add fifoci user
  user:
    name: fifoci
    home: /home/fifoci
    shell: /bin/bash
    state: present

- name: fifoci | Add public key to login as fifoci
  authorized_key:
    user: fifoci
    key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

- name: fifoci | Add github to known_hosts
  sudo: yes
  sudo_user: fifoci
  lineinfile:
    dest: ~/.ssh/known_hosts
    create: yes
    state: present
    line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
    regexp: "^github\\.com"

##
## CLONE
##
- name: fifoci | Clone fifoci
  sudo: yes
  sudo_user: fifoci
  git:
    repo: "{{ fifoci_repository }}"
    dest: fifoci
    accept_hostkey: "{{ 'yes' if testing is defined else 'no' }}"

##
## APT DEPENDENCIES
##
- name: fifoci | Add ffmpeg PPA
  apt_repository:
    repo: 'ppa:kirillshkrogalev/ffmpeg-next'

- name: fifoci | Install fifoci runner dependencies
  apt:
    pkg: "{{ item }}"
    state: present
  with_items:
    - python3
    - python3-pip
    - xserver-xorg
    - xserver-xorg-core
    - ffmpeg

##
## PIP DEPENDENCIES
##
- name: fifoci | Install fifoci dependencies (pip requirements)
  pip:
    executable: pip3
    requirements: /home/fifoci/fifoci/requirements.txt
    state: present

##
## DEPLOY
##

# Needed for runner execution by the build master
- name: fifoci | Link python into fifoci home
  sudo: yes
  sudo_user: fifoci
  file:
    src: "/usr/bin/{{ item }}3"
    dest: "~/{{ item }}"
    state: link
  with_items:
    - python

# The fifoci runner requires sudo to run xorg
- name: fifoci | Give fifoci sudo
  copy:
    content: 'fifoci ALL=(ALL) NOPASSWD: ALL'
    dest: /etc/sudoers.d/fifoci
    mode: 0440
    validate: 'visudo -cf %s'

##
## DFF
##
- name: fifoci | Create media (dff) area
  sudo: yes
  sudo_user: fifoci
  file:
    path: ~/dff
    state: directory

# This could be left to be downloaded from the fifoci web server by the runner.
# However, it may as well be copied now.
- name: fifoci | Copy dff files (needed for tests)
  sudo: yes
  sudo_user: fifoci
  copy:
    src: dff/
    dest: ~/dff

